
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Color Guessing Game</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background: #f0f0f0;
    }
    h1 {
      color: #333;
    }
    #colorBox {
      width: 200px;
      height: 200px;
      margin: 20px auto;
      border: 3px solid #333;
      border-radius: 10px;
    }
    .options {
      display: flex;
      justify-content: center;
      margin: 20px;
      flex-wrap: wrap;
    }
    .option {
      width: 100px;
      height: 100px;
      margin: 10px;
      border-radius: 8px;
      cursor: pointer;
      border: 2px solid #333;
      transition: transform 0.2s;
    }
    .option:hover {
      transform: scale(1.1);
    }
    #message {
      font-size: 18px;
      margin: 10px;
    }
    #score {
      font-size: 20px;
      margin-top: 10px;
    }
    #restartBtn {
      display: none;
      margin-top: 20px;
      padding: 10px 20px;
      font-size: 16px;
      background: #333;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    #restartBtn:hover {
      background: #555;
    }
    #chatLink {
      margin-top: 30px;
      font-size: 16px;
    }
    #chatLink a {
      color: blue;
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <h1>Color Guessing Game</h1>
  <p>Guess which color matches the RGB code:</p>
  <h2 id="rgbCode">RGB(?, ?, ?)</h2>
  <div id="colorBox"></div>
  <div class="options" id="options"></div>
  <p id="message"></p>
  <p id="score">Score: 0</p>
  <button id="restartBtn">Restart Game</button>

  <!-- Chat history link for teacher -->
  <div id="chatLink">
    <p>📌 Chat history link: 
      <a href="https://chatgpt.com/share/68d1f509-a1e0-800f-bcf9-176e58abfffa" target="_blank">
        View AI Chat History
      </a>
    </p>
  </div>

  <script>
    const rgbCode = document.getElementById("rgbCode");
    const colorBox = document.getElementById("colorBox");
    const options = document.getElementById("options");
    const message = document.getElementById("message");
    const scoreDisplay = document.getElementById("score");
    const restartBtn = document.getElementById("restartBtn");

    let targetColor;
    let score = 0;
    const winScore = 5;

    function randomColor() {
      const r = Math.floor(Math.random() * 256);
      const g = Math.floor(Math.random() * 256);
      const b = Math.floor(Math.random() * 256);
      return `rgb(${r}, ${g}, ${b})`;
    }

    function newRound() {
      options.innerHTML = "";
      message.textContent = "";

      // Generate target color
      targetColor = randomColor();
      rgbCode.textContent = targetColor.toUpperCase();
      colorBox.style.background = targetColor;

      // Generate options (1 correct + 2 random)
      let colors = [targetColor];
      while (colors.length < 3) {
        let c = randomColor();
        if (!colors.includes(c)) colors.push(c);
      }

      // Shuffle
      colors.sort(() => Math.random() - 0.5);

      // Create buttons
      colors.forEach(c => {
        const div = document.createElement("div");
        div.classList.add("option");
        div.style.background = c;
        div.onclick = () => checkAnswer(c);
        options.appendChild(div);
      });
    }

    function checkAnswer(selected) {
      if (selected === targetColor) {
        score++;
        message.textContent = "✅ Correct!";
      } else {
        message.textContent = "❌ Wrong! Try again.";
      }
      scoreDisplay.textContent = "Score: " + score;

      if (score >= winScore) {
        message.textContent = "🎉 You win the game!";
        restartBtn.style.display = "inline-block";
        options.innerHTML = "";
      } else {
        setTimeout(newRound, 1000);
      }
    }

    restartBtn.onclick = () => {
      score = 0;
      scoreDisplay.textContent = "Score: 0";
      restartBtn.style.display = "none";
      newRound();
    };

    // Start game
    newRound();
  </script>
</body>
</html>
